{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Alert","height","alert","concat","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","Link","to","title","aria-label","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","heading","value","onChange","event","target","rows","disabled","length","handleUpClick","newText","showAlert","handleLowClick","handleClearClick","handleCopyClick","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","filter","element","defaultProps","App","setMode","setAlert","message","setTimeout","Router","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"0LAEe,SAASA,EAAMC,GAE5B,IAAIC,EAAS,CACXC,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,YACzCC,gBAAgC,SAAfJ,EAAMG,KAAkB,YAAc,SAGzD,OACEE,IAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAOP,GAChCI,IAAAC,cAAA,MAAIC,UAAU,QAAO,YACrBF,IAAAC,cAAA,OAAKC,UAAU,YAAYE,GAAG,mBAAmBD,MAAOP,GACtDI,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,MAAIC,UAAU,oBACZF,IAAAC,cAAA,UACEC,UAAU,mBACVC,MAAOP,EACPS,KAAK,SACLC,iBAAe,WACfC,iBAAe,eACfC,gBAAc,OACdC,gBAAc,eAEdT,IAAAC,cAAA,cAAQ,uBAGZD,IAAAC,cAAA,OACEG,GAAG,cACHF,UAAU,mCACVQ,iBAAe,qBAEfV,IAAAC,cAAA,OAAKC,UAAU,iBAAiBC,MAAOP,GAAS,0IAKpDI,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,MAAIC,UAAU,oBACZF,IAAAC,cAAA,UACEC,UAAU,6BACVC,MAAOP,EACPS,KAAK,SACLC,iBAAe,WACfC,iBAAe,eACfC,gBAAc,QACdC,gBAAc,eAEdT,IAAAC,cAAA,cAAQ,iBAGZD,IAAAC,cAAA,OACEG,GAAG,cACHF,UAAU,8BACVQ,iBAAe,qBAEfV,IAAAC,cAAA,OAAKC,UAAU,iBAAiBC,MAAOP,GAAS,qPAKpDI,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,MAAIC,UAAU,oBACZF,IAAAC,cAAA,UACEC,UAAU,6BACVG,KAAK,SACLF,MAAOP,EACPU,iBAAe,WACfC,iBAAe,iBACfC,gBAAc,QACdC,gBAAc,iBAEdT,IAAAC,cAAA,cAAQ,wBAGZD,IAAAC,cAAA,OACEG,GAAG,gBACHF,UAAU,8BACVQ,iBAAe,qBAEfV,IAAAC,cAAA,OAAKC,UAAU,iBAAiBC,MAAOP,GAAS,oNC3D7Ce,MAnBf,SAAehB,GAKb,OACEK,IAAAC,cAAA,OAAKE,MAAO,CAACS,OAAQ,SACpBjB,EAAMkB,OACLb,IAAAC,cAAA,OACEC,UAAS,eAAAY,OAAiBnB,EAAMkB,MAAMR,KAAI,gCAC1CU,KAAK,SAELf,IAAAC,cAAA,cAXgBe,KAChB,MAAMC,EAAQD,EAAKE,cACnB,OAAOD,EAAME,OAAO,GAAGC,cAAgBH,EAAMI,MAAM,IAS1CC,CAAW3B,EAAMkB,MAAMR,OAAe,MAAIV,EAAMkB,MAAMU,cCVxD,SAASC,EAAO7B,GAC7B,OACEK,IAAAC,cAAA,OAAKC,UAAS,kCAAAY,OAAoCnB,EAAMG,KAAI,QAAAgB,OAAOnB,EAAMG,OACvEE,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAACwB,IAAI,CAACvB,UAAU,eAAewB,GAAG,KAC/B/B,EAAMgC,OAET3B,IAAAC,cAAA,UACEC,UAAU,iBACVG,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfE,gBAAc,yBACdD,gBAAc,QACdoB,aAAW,qBAEX5B,IAAAC,cAAA,QAAMC,UAAU,yBAElBF,IAAAC,cAAA,OAAKC,UAAU,2BAA2BE,GAAG,0BAC3CJ,IAAAC,cAAA,MAAIC,UAAU,mCACZF,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACwB,IAAI,CAACvB,UAAU,kBAAkB2B,eAAa,OAAOH,GAAG,KAAI,SAI/D1B,IAAAC,cAAA,MAAIC,UAAU,YACZF,IAAAC,cAACwB,IAAI,CAACvB,UAAU,WAAWwB,GAAG,UAC3B/B,EAAMmC,aAeb9B,IAAAC,cAAA,OAAKC,UAAS,+BAAAY,OAAgD,UAAfnB,EAAMG,KAAiB,OAAO,UAC3EE,IAAAC,cAAA,SACEC,UAAU,mBACVG,KAAK,WACLU,KAAK,SACLX,GAAG,yBACH2B,QAASpC,EAAMqC,aAEjBhC,IAAAC,cAAA,SAAOC,UAAU,oBAAoB+B,QAAQ,0BAAyB,wBCpDnE,SAASC,EAASvC,GAC/B,MA6BOwC,EAAMC,GAAWC,mBAAS,IAEjC,OACErC,IAAAC,cAAAD,IAAAsC,SAAA,KACEtC,IAAAC,cAAA,OACEC,UAAU,YACVC,MAAO,CAAEN,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,YAElDE,IAAAC,cAAA,MAAIC,UAAU,QAAQP,EAAM4C,SAC5BvC,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,YACEC,UAAU,eACVE,GAAG,QACHoC,MAAOL,EACPM,SAjBcC,IACtBN,EAAQM,EAAMC,OAAOH,QAiBbrC,MAAO,CACLJ,gBAAgC,SAAfJ,EAAMG,KAAkB,YAAc,QACvDD,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,WAE3C8C,KAAK,OAGT5C,IAAAC,cAAA,UAAQ4C,SAAwB,IAAdV,EAAKW,OAAY5C,UAAU,yBAAyB6B,QAnDtDgB,KAEpB,IAAIC,EAAUb,EAAKf,cACnBgB,EAAQY,GACRrD,EAAMsD,UAAU,yBAA0B,aA+CwD,wBAG9FjD,IAAAC,cAAA,UAAQ4C,SAAwB,IAAdV,EAAKW,OAAY5C,UAAU,4BAA4B6B,QAhDxDmB,KAErB,IAAIF,EAAUb,EAAKjB,cACnBkB,EAAQY,GACRrD,EAAMsD,UAAU,yBAA0B,aA4C4D,wBAGlGjD,IAAAC,cAAA,UAAQ4C,SAAwB,IAAdV,EAAKW,OAAY5C,UAAU,2BAA2B6B,QA7CrDoB,KAGvBf,EADc,IAEdzC,EAAMsD,UAAU,kBAAmB,aAyCoE,cAGnGjD,IAAAC,cAAA,UAAQ4C,SAAwB,IAAdV,EAAKW,OAAY5C,UAAU,4BAA4B6B,QA1CvDqB,KACtB,IAAIjB,EAAOkB,SAASC,eAAe,SACnCnB,EAAKoB,SACLC,UAAUC,UAAUC,UAAUvB,EAAKK,OACnCa,SAASM,eAAeC,kBACxBjE,EAAMsD,UAAU,sBAAuB,aAqCgE,cAIrGjD,IAAAC,cAAA,OACEC,UAAU,iBACVC,MAAO,CAAEN,MAAsB,SAAfF,EAAMG,KAAkB,QAAU,YAElDE,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,SACGkC,EAAK0B,MAAM,KAAKC,OAAQC,GAAmC,IAAjBA,EAAQjB,QAAaA,OAAO,cAAYX,EAAKW,OAAO,eAEjG9C,IAAAC,cAAA,SAAI,KAAQkC,EAAK0B,MAAM,KAAKC,OAAQC,GAAmC,IAAjBA,EAAQjB,QAAaA,OAAO,iBAClF9C,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SACGkC,EAAKW,OAAS,EACXX,EACA,wBDXdX,EAAOwC,aAAe,CACpBrC,MAAO,iBACPG,UAAW,oBEvBEmC,MAxCf,WACE,MAAOnE,EAAMoE,GAAW7B,mBAAS,UAC1BxB,EAAOsD,GAAY9B,mBAAS,MAC7BY,EAAYA,CAACmB,EAAS/D,KAC1B8D,EAAS,CACP5C,IAAK6C,EACL/D,KAAMA,IAERgE,WAAW,KACTF,EAAS,OACR,OAcL,OACEnE,IAAAC,cAAAD,IAAAsC,SAAA,KACEtC,IAAAC,cAACqE,IAAM,KACPtE,IAAAC,cAACuB,EAAM,CAACG,MAAM,YAAY7B,KAAMA,EAAMkC,WAfvBA,KACJ,UAATlC,GACFoE,EAAQ,QACRb,SAASkB,KAAKpE,MAAMJ,gBAAkB,UACtCkD,EAAU,6BAA8B,aAExCiB,EAAQ,SACRb,SAASkB,KAAKpE,MAAMJ,gBAAkB,QACtCkD,EAAU,8BAA+B,eAQzCjD,IAAAC,cAAA,OAAKC,UAAU,kBACfF,IAAAC,cAACU,EAAK,CAACE,MAAOA,IACVb,IAAAC,cAACuE,IAAM,KACLxE,IAAAC,cAACwE,IAAK,CAACC,KAAK,IAAIX,QAAS/D,IAAAC,cAACiC,EAAQ,CAACe,UAAWA,EAAWV,QAAQ,kDAAkDzC,KAAMA,MACzHE,IAAAC,cAACwE,IAAK,CAACC,KAAK,SAASX,QAAS/D,IAAAC,cAACP,EAAK,CAACI,KAAMA,WC5BxC6E,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWpC,SAASC,eAAe,SACpDoC,OACH1F,IAAAC,cAACD,IAAM2F,WAAU,KACf3F,IAAAC,cAACgE,EAAG,QAORU","file":"static/js/main.7cc71860.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n\r\n  let myStyle ={\r\n    color: props.mode === \"dark\" ? \"white\" : \"#040f20ed\",\r\n    backgroundColor: props.mode === \"dark\" ? \"#040f20ed\" : \"white\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h1 className=\"my-2\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong>Analyze Your Text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Textutils gives you a way to analyze your text quickly and efficiently. Be it word count,character count or time to read given Text.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong>Free To Use</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUtils is a free character counter tool that provides instant character count & word count stastics for a given text. TextUtils reports the number of words and characters,thus it is suitable for writing text with word or character limit \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong>Browser Compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This word counter software works in any web browsers such as Chrome, Brave, Opera,Internet explorer, Safari, Edge. It suits to count characters in Facebook, Blog, Books, essays, Excel documents, Pdfs etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-secondary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked \" + text)\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Uppercase\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    // console.log(\"Uppercase was clicked \" + text)\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To Lowercase\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppercase was clicked \" + text)\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is Cleared\", \"success\");\r\n  };\r\n  const handleCopyClick = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    document.getSelection().removeAllRanges();\r\n    props.showAlert(\"Copied to Clipboard\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#030d1b\" }}\r\n      >\r\n        <h1 className=\"mb-3\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#061326f2\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#030d1b\",\r\n            }}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-info mx-1 my-1\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-danger mx-1 my-1\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopyClick}>\r\n          Copy Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#030d1b\" }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Nothing To Preview\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#030d1b\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n    }\n  };\n  \n  return (\n    <>\n      <Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <div className=\"container my-3\">\n      <Alert alert={alert} />\n          <Routes>\n            <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter\" mode={mode} />} />\n            <Route path=\"/about\" element={<About mode={mode}/>} />\n          </Routes>\n          </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}